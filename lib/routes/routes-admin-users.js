// Generated by CoffeeScript 1.4.0
(function() {
  var RoutesAdminUsers, async, sampleUsers, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ = require('underscore');

  async = require('async');

  sampleUsers = {
    "andras@openbusiness.com.sg": {
      company_name: "X",
      password: "aaa",
      roles: ["backoffice", "sales", "purchasing"],
      name: "Andras",
      username: "psmith",
      primaryEmail: "andras@openbusiness.com.sg"
    },
    "noroles@openbusiness.com.sg": {
      company_name: "GUAN-HUAT",
      password: "xxx",
      username: 'noroles',
      primaryEmail: "noroles@openbusiness.com.sg"
    },
    "sales@openbusiness.com.sg": {
      company_name: "GUAN-HUAT",
      password: "sales",
      roles: ["sales"],
      username: "sales",
      primaryEmail: "sales@openbusiness.com.sg"
    },
    "hanselke@openbusiness.com.sg": {
      company_name: "openbiz",
      password: "demo",
      roles: ["backoffice", "sales", "purchasing"],
      name: "Hansel Ke",
      username: "hansel",
      primaryEmail: "hanselke@openbusiness.com.sg"
    },
    "onetom@openbusiness.com.sg": {
      company_name: "Open Business",
      password: "xxx",
      roles: ["backoffice", "sales", "purchasing"],
      name: "Tom",
      username: "onetom",
      primaryEmail: "onetom@openbusiness.com.sg"
    }
  };

  module.exports = RoutesAdminUsers = (function() {

    function RoutesAdminUsers(settings) {
      this.setupDemoUsers = __bind(this.setupDemoUsers, this);

      this.setupRoutes = __bind(this.setupRoutes, this);

      this.setupLocals = __bind(this.setupLocals, this);
      _.extend(this, settings);
      if (!this.app) {
        throw new Error("app parameter is required");
      }
      if (!this.identityStore) {
        throw new Error("identityStore parameter is required");
      }
    }

    RoutesAdminUsers.prototype.setupLocals = function() {};

    RoutesAdminUsers.prototype.setupRoutes = function() {
      return this.app.post('/admin/users/setup-demo', this.setupDemoUsers);
    };

    /*
      Temporary helper to setup demo users. To do this run this once:
      curl -X POST -d '{}' -H 'Content-Type: application/json' -H 'Accept: application/json' http://127.0.0.1:8001/admin/users/setup-demo
    */


    RoutesAdminUsers.prototype.setupDemoUsers = function(req, res, next) {
      var createUser,
        _this = this;
      createUser = function(user, cb) {
        return _this.identityStore.users.create(user, function(err) {
          return cb(null);
        });
      };
      return async.forEach(_.values(sampleUsers), createUser, function(err) {
        return res.json({});
      });
    };

    return RoutesAdminUsers;

  })();

}).call(this);
