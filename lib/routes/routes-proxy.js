// Generated by CoffeeScript 1.4.0
(function() {
  var RoutesProxy, async, errors, qs, request, winston, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ = require('underscore');

  async = require('async');

  winston = require('winston');

  errors = require('some-errors');

  request = require('request');

  qs = require('querystring');

  module.exports = RoutesProxy = (function() {

    function RoutesProxy(settings, servicesBonita) {
      this.servicesBonita = servicesBonita;
      this.login = __bind(this.login, this);

      this.proxy = __bind(this.proxy, this);

      this.getProxy = __bind(this.getProxy, this);

      this.setupRoutes = __bind(this.setupRoutes, this);

      this.setupLocals = __bind(this.setupLocals, this);

      _.extend(this, settings);
      if (!this.app) {
        throw new Error("app parameter is required");
      }
      if (!this.servicesBonita) {
        throw new Error("servicesBonita parameter is required");
      }
    }

    RoutesProxy.prototype.setupLocals = function() {};

    RoutesProxy.prototype.setupRoutes = function() {
      return this.app.all('/proxy/*', this.getProxy);
    };

    RoutesProxy.prototype.getProxy = function(req, res, next) {
      console.log("GOT THIS ONE " + req.path);
      return this.proxy(req, res, "admin", "bpm", req.path.substr(6));
    };

    RoutesProxy.prototype.proxy = function(req, res, username, password, url) {
      var targetUrl,
        _this = this;
      targetUrl = "" + this.servicesBonita.baseUrl + url;
      return this.login(username, password, function(err, j) {
        var optionsFinal;
        if (err) {
          return res.end(500);
        }
        optionsFinal = {
          url: targetUrl,
          method: req.method,
          jar: j
        };
        return request[req.method.toLowerCase()](optionsFinal, function(err, response, body) {
          return res.send(body);
        });
      });
    };

    /*
      proxyPost: (req,res, username,password,url) =>
        targetUrl = "http://simplerelevance.com#{url}"
        @login  username,password,(err,j) =>
          return res.end 500 if err
    
          optionsFinal =
            url : targetUrl
            method : req.method
            body : req.body
            Accept : 'application/json'
            headers:
              'Content-Type': 'application/json'
            jar : j
    
          request.post optionsFinal, (err,response,body) =>
            res.send(body)
    */


    RoutesProxy.prototype.login = function(username, password, cb) {
      var j, optionsGet,
        _this = this;
      j = request.jar();
      optionsGet = {
        url: "" + this.servicesBonita.baseUrl + "/console/login.jsp",
        jar: j
      };
      return request.get(optionsGet, function(err, response, body) {
        var optionsPost, token;
        if (err) {
          cb(err);
        }
        token = '';
        optionsPost = {
          url: "" + _this.servicesBonita.baseUrl + "/security/credentialsencryption",
          body: qs.stringify({
            next: '/',
            csrfmiddlewaretoken: token,
            username: username,
            password: password
          }),
          'Content-Type': 'application/x-www-form-urlencoded',
          jar: j
        };
        return request.post(optionsPost, function(err, response, body) {
          if (err) {
            cb(err);
          }
          return cb(null, j);
        });
      });
    };

    return RoutesProxy;

  })();

}).call(this);
