// Generated by CoffeeScript 1.4.0
(function() {
  var RoutesApi, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ = require('underscore');

  module.exports = RoutesApi = (function() {

    function RoutesApi(settings) {
      this.getSession = __bind(this.getSession, this);

      this.setupRoutes = __bind(this.setupRoutes, this);

      this.setupLocals = __bind(this.setupLocals, this);
      _.extend(this, settings);
      if (!this.app) {
        throw new Error("app parameter is required");
      }
      if (!this.passport) {
        throw new Error("passport parameter is required");
      }
      if (!this.identityStore) {
        throw new Error("identityStore parameter is required");
      }
    }

    RoutesApi.prototype.setupLocals = function() {};

    RoutesApi.prototype.setupRoutes = function() {
      return this.app.get('/api/session', this.getSession);
    };

    /*
      Retrieve the current session (e.g. the user that is currently logged in). 
      Returns a 404 if no session exists - e.g. no user is logged in.
    */


    RoutesApi.prototype.getSession = function(req, res) {
      if (!req.user) {
        return res.json({}, 404);
      }
      return res.json(req.user.toRest(this.baseUrl));
    };

    return RoutesApi;

  })();

}).call(this);
