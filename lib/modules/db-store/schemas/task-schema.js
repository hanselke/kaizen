// Generated by CoffeeScript 1.4.0
(function() {
  var ObjectId, TaskSchema, errors, mongoose, pluginCreatedBy, pluginDeleteParanoid, pluginTagsSimple, pluginTimestamp, _;

  _ = require('underscore');

  mongoose = require('mongoose');

  pluginTimestamp = require("mongoose-plugins-timestamp");

  pluginCreatedBy = require("mongoose-plugins-created-by");

  pluginDeleteParanoid = require("mongoose-plugins-delete-paranoid");

  pluginTagsSimple = require("mongoose-plugins-tags-simple");

  errors = require('some-errors');

  ObjectId = mongoose.Schema.ObjectId;

  module.exports = TaskSchema = new mongoose.Schema({
    processDefinitionId: {
      type: ObjectId,
      required: true
    },
    checkedOutByUserId: {
      type: String
    },
    state: {
      type: String,
      "default": 'active',
      required: true
    },
    data: {
      type: mongoose.Schema.Types.Mixed,
      "default": function() {
        return {};
      }
    },
    processInstanceUUID: {
      type: String,
      unique: true
    },
    activeTaskUUID: {
      type: String
    },
    activeActivityName: {
      type: String
    },
    totalAbsoluteTimeSpent: {
      type: Number,
      "default": 0
    },
    totalTimeSpent: {
      type: Number,
      "default": 0
    },
    checkedOutDate: {
      type: Date
    }
  }, {
    strict: true
  });

  TaskSchema.plugin(pluginTimestamp.timestamps);

  TaskSchema.plugin(pluginCreatedBy.createdBy, {
    isRequired: true
  });

  TaskSchema.methods.toRest = function(baseUrl, actor) {
    var res;
    res = {
      url: "" + baseUrl + "/tasks/" + this._id,
      id: this._id,
      processDefinitionId: this.processDefinitionId,
      checkedOutByUserId: this.checkedOutByUserId,
      createdBy: this.createdBy,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
      processInstanceUUID: this.processInstanceUUID
    };
    return res;
  };

}).call(this);
