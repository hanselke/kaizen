// Generated by CoffeeScript 1.4.0
(function() {
  var ProcessDefinitionSchema, errors, mongoose, pluginCreatedBy, pluginDeleteParanoid, pluginTagsSimple, pluginTimestamp, _;

  _ = require('underscore');

  mongoose = require('mongoose');

  pluginTimestamp = require("mongoose-plugins-timestamp");

  pluginCreatedBy = require("mongoose-plugins-created-by");

  pluginDeleteParanoid = require("mongoose-plugins-delete-paranoid");

  pluginTagsSimple = require("mongoose-plugins-tags-simple");

  errors = require('some-errors');

  module.exports = ProcessDefinitionSchema = new mongoose.Schema({
    name: {
      type: String,
      trim: true,
      match: /.{2,30}/,
      required: true
    },
    description: {
      type: String,
      "default": function() {
        return '';
      },
      trim: true,
      match: /.{0,1000}/
    },
    sourceXlsx: {
      type: String
    },
    sourceSize: {
      type: Number
    },
    sourceFilename: {
      type: String
    },
    sourceType: {
      type: String
    },
    layout: {
      type: mongoose.Schema.Types.Mixed
    },
    createableByRoles: {
      type: [String],
      "default": function() {
        return ['admin'];
      }
    },
    stateMachine: {
      type: mongoose.Schema.Types.Mixed
    },
    taskNamePrefix: {
      type: String,
      "default": 'TASK'
    },
    hasExcel: {
      type: Boolean,
      "default": false
    },
    hasLayout: {
      type: Boolean,
      "default": false
    }
  }, {
    strict: true
  });

  ProcessDefinitionSchema.plugin(pluginTimestamp.timestamps);

  ProcessDefinitionSchema.plugin(pluginCreatedBy.createdBy, {
    isRequired: true
  });

  ProcessDefinitionSchema.plugin(pluginDeleteParanoid.deleteParanoid);

  ProcessDefinitionSchema.methods.toRest = function(baseUrl, actor) {
    var res;
    res = {
      url: "" + baseUrl + "/process-definitions/" + this._id,
      id: this._id,
      name: this.name,
      description: this.description,
      createdBy: this.createdBy,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
      isDeleted: this.isDeleted || false,
      deletedAt: this.deletedAt || null
    };
    return res;
  };

}).call(this);
