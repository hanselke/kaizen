// Generated by CoffeeScript 1.4.0

/*
Handles the identity API in bonita
*/


(function() {
  var QueryRuntime,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  module.exports = QueryRuntime = (function() {

    function QueryRuntime(client) {
      this.client = client;
      this.getTasks = __bind(this.getTasks, this);

      this.getTaskList = __bind(this.getTaskList, this);

      this.getProcessInstances = __bind(this.getProcessInstances, this);

      if (!this.client) {
        throw new Error("client parameter is required");
      }
    }

    QueryRuntime.prototype.getProcessInstances = function(processUUID, actAsUser, opts, cb) {
      if (opts == null) {
        opts = {};
      }
      if (cb == null) {
        cb = function() {};
      }
      return this.client.post("/API/queryRuntimeAPI/getProcessInstances/" + processUUID, actAsUser, {}, opts, cb);
    };

    /*
      curl -X POST -d 'options=user:admin' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: application/xml' -H 'Authorization: Basic cmVzdHVzZXI6cmVzdGJwbQ=='  http://ec2-54-251-77-171.ap-southeast-1.compute.amazonaws.com:8080/bonita-server-rest/API/queryRuntimeAPI/getTaskList/QA_Data_Entry--1.2--16/READY
    */


    QueryRuntime.prototype.getTaskList = function(instanceUUID, taskState, actAsUser, opts, cb) {
      if (opts == null) {
        opts = {};
      }
      if (cb == null) {
        cb = function() {};
      }
      return this.client.post("/API/queryRuntimeAPI/getTaskList/" + instanceUUID + "/" + taskState, actAsUser, {}, opts, cb);
    };

    /*
      curl -X POST -d 'options=user:admin' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: application/xml' -H 'Authorization: Basic cmVzdHVzZXI6cmVzdGJwbQ=='  http://ec2-54-251-77-171.ap-southeast-1.compute.amazonaws.com:8080/bonita-server-rest/API/queryRuntimeAPI/getTasks/QA_Data_Entry--1.2--16
    */


    QueryRuntime.prototype.getTasks = function(instanceUUID, actAsUser, opts, cb) {
      if (opts == null) {
        opts = {};
      }
      if (cb == null) {
        cb = function() {};
      }
      return this.client.post("/API/queryRuntimeAPI/getTasks/" + instanceUUID, actAsUser, {}, opts, cb);
    };

    return QueryRuntime;

  })();

}).call(this);
