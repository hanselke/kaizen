"I'm a Visitor" [current-role: none]
"I try to register" [register Visitor]
"It should succeed" [no! E]
"I should get my details back" [
	my: reg-payload 'Visitor
	equal! R/company_name my/company_name
	equal! R/email my/email
]
"no passwords included" [no! R/password]
"with a user ID" [not-none! R/id]
"I'm a registered User" [register User]
"I try to register again" [register User]
"I should be remembered" [none]
"get a 409 Conflict error" [equal! Error 409]
"I'm logged in" [login User]
"Someone tries to register" [register Someone]
"S/he should get a 403 Forbidden error" [equal! E 403]
"I'm a Backoffice user" [register backoffice  login backoffice]
"a Fax has arrived" [post faxes [image: "RFQ"]]
"I ask for the next task" [task: first wget tasks]
"I should get the same Fax image" [within task equal! name "ProcessFax"  equal! image "RFQ"]
"a ProcessRFQ skeleton" [
	within task/ProcessRFQ
		equal! name "ProcessRFQ"
		has! ApplicationArea [ Sender: "backoffice"	Receiver: "sales" ]
]
"which links to the Fax image" [
	equal!
		task/ProcessRFQ/DataArea/RFQ/RFQHeader/DocumentReference/DocumentID/ID
		task/ApplicationArea/BODID
	equal! task/RFQ/Head/Ref/'ID  ~ task/BODID
]
"we have a look at the board" [board: wget board]
"we should see a Fax card in the Backoffice lane" [
	equal! board/backoffice/1/id "FAX"
	equal! board/backoffice/1/desc "processing..."
	equal! board/backoffice/1/ready false
	empty! board/sales
	empty! board/purchasing
	empty! board/done

	equal! board/backoffice/1 [
		id: "FAX"
		desc: "processing..."
		ready: false
	]
]
"the Backoffice user asks for the next task" [
	as a backoffice  wget tasks
	length! R 1
	task: first R
]
"he gets empty forms" [
	not-none! task/ProcessRFQ
]
"he submits the ProcessRFQ form" [post sales rfq: task/demoProcessRFQ]
"he should get a confirmation" [type! R object! equal! R/status "ok"]
"we should see a ready RFQ card in the Backoffice lane" [
	length! board/backoffice 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/backoffice/1 [
		id: rejoin ["RFQ#" header/DocumentID/ID]
		desc: rejoin ["<br>" header/CustomerParty/Name]
		ready: true
		]
	empty! board/sales
	empty! board/purchasing
	empty! board/done
]
"a Sales man asks for the next task" [
	as a sales  wget tasks
	length! R 1
	task: first R
]
"he should get 1 ProcessSalesOrder" [
	equal! task/name "ProcessSalesOrder"
	has! task/ApplicationArea [ Sender: "sales"  Receiver: "sales" ]
]
"it has a PriceList" [not-none! task/DataArea/PriceList]
"it has the same number of line items as the RFQ" [
	length! task/DataArea/SalesOrder/SalesOrderLine  length? rfq/DataArea/RFQ/RFQLine
]
"each line item has CatalogReference" [
	not-none! task/DataArea/SalesOrder/SalesOrderLine/1/CatalogReference
]
"has the same Customer as in the RFQ" [
	equal!
		task/DataArea/SalesOrder/SalesOrderHeader/CustomerParty
		rfq/DataArea/RFQ/RFQHeader/CustomerParty
]
"we should see a WIP RFQ card in the Sales lane" [
	empty! board/backoffice
	length! board/sales 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/sales/1 [
		id: rejoin ["RFQ#" header/DocumentID/ID]
		desc: rejoin ["<br>" header/CustomerParty/Name "<br>mapping inventory..."]
		ready: false
		]
	empty! board/purchasing
	empty! board/done
]
"he submits a full inventory mapping" [
	items: task/DataArea/PriceList/items
	i: 1
	lines: task/DataArea/SalesOrder/SalesOrderLine
	forall lines [
		item: get in items to-word to-string i
		lines/1/CatalogReference/ItemID/1/ID: item/id
		i: i + 1
	]
	as a sales  post sales sales_order: task
]
"a Sales man asks for the next task again" [
	as a sales  wget tasks
	length! R 1
	task: first R
]
"he should get 1 SyncSalesOrder" [
	equal! task/name "SyncSalesOrder"
	has! task/ApplicationArea [ Sender: "sales"  Receiver: "sales" ]
]
"it has the same number of line items as the previous SalesOrder" [
	length!
		task/DataArea/SalesOrder/SalesOrderLine
		length? sales_order/DataArea/SalesOrder/SalesOrderLine
]
"it has fields for prices" [
	lines: task/DataArea/SalesOrder/SalesOrderLine
	forall lines [
		not-none! lines/1/UnitPrice
	]
]
"he submits a partial inventory mapping" [
	items: task/DataArea/PriceList/items
	lines: task/DataArea/SalesOrder/SalesOrderLine
	item: get in items to-word to-string 1
	lines/1/CatalogReference/ItemID/1/ID: item/id
	as a sales  post sales sales_order: task
]
"we should see a ready inventory mapped RFQ card in the Sales lane" [
	empty! board/backoffice
	length! board/sales 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/sales/1 [
		id: rejoin ["RFQ#" header/DocumentID/ID]
		desc: rejoin ["<br>" header/CustomerParty/Name "<br><em>inventory mapped</em>"]
		ready: true
		]
	empty! board/purchasing
	empty! board/done
]
"a Sales man asks for tasks again" [ as a sales  wget tasks ]
"he should not get any tasks yet" [
	length! R 0
]
"a Purchasing user asks for tasks" [
	as a purchasing  wget tasks
	length! R 1
	task: first R
]
"the Purchasing user should get 1 SyncSalesOrder" [
	equal! task/name "SyncSalesOrder"
	has! task/ApplicationArea [ Sender: "purchasing"  Receiver: "sales" ]
]
"it has a SalesOrder ID" [
	not-none! task/DataArea/SalesOrder/SalesOrderHeader/DocumentID/ID
]
"it has fields for Supplier references" [
	original_items: sales_order/DataArea/SalesOrder/SalesOrderLine
	mapped_item_desc: original_items/1/Description
	new_items: task/DataArea/SalesOrder/SalesOrderLine
	length! new_items ((length? original_items) - 1)
	forall new_items [
		not-none! new_items/1/UserArea
		;assert.notEqual(item.Description, mapped_item_desc)
	]
]
"it has a Supplier list" [
	not-none! task/DataArea/SupplierPartyMaster
]
"it doesn't have a PriceList" [
	no! task/DataArea/PriceList
]
"we should see a WIP mapping suppliers card in the Purchasing lane" [
	empty! board/backoffice
	empty! board/sales
	length! board/purchasing 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/purchasing/1 [
		id: rejoin ["RFQ#" header/DocumentID/ID]
		desc: rejoin ["<br>" header/CustomerParty/Name "<br><em>mapping suppliers...</em>"]
		ready: false
		]
	empty! board/done
]
"a ProcessPO skeleton" [
	within task/ProcessPurchaseOrder
		equal! name "ProcessPurchaseOrder"
		has! ApplicationArea [ Sender: "backoffice" Receiver: "sales" ]
]
"he submits the ProcessPO form" [post sales po: task/demoProcessPurchaseOrder]
"XXXXXwe should see a ready PO card in the Backoffice lane" [
	length! board/backoffice 1
	header: po/DataArea/PurchaseOrder/PurchaseOrderHeader
	equal! board/backoffice/1 [
		id: rejoin ["PO#" header/DocumentID/ID]
		desc: rejoin ["<br>" header/CustomerParty/Name]
		ready: true
		]
	empty! board/sales
	empty! board/purchasing
	empty! board/done
]
"it has the same number of line items as the PO" [
	length! task/DataArea/SalesOrder/SalesOrderLine  length? po/DataArea/PurchaseOrder/PurchaseOrderLine
]
"has the same Customer as in the PO" [
	equal!
		task/DataArea/SalesOrder/SalesOrderHeader/CustomerParty
		po/DataArea/PurchaseOrder/PurchaseOrderHeader/CustomerParty
]
"he submits customer Quote" [
	post sales task
]
"he sends out the customer Quote" [
	post sales quote: task
]
"a Backoffice user receives a Purchase Order via phone" [
	1
]
"he submits a PO referencing the previous customer Quote" [
	po: context [
		name: "ProcessPurchaseOrder"
		ApplicationArea: context [Sender: "backoffice" Receiver: "sales"]
		DataArea: context [
			Process: none
			PurchaseOrder: context [
				PurchaseOrderHeader: context [
					DocumentID: context [ID: none]
					DocumentReference: context [DocumentID: context [ID: none] ] ] ] ] ]
	po/DataArea/PurchaseOrder/PurchaseOrderHeader/DocumentReference/DocumentID/ID: quote/DataArea/Quote/QuoteHeader/DocumentID/ID
	post sales po
]
"it has the same number of line items as the Quote" [
	length! task/Line length? ~ quote/Line
]
"it has the same prices as the Quote" [
	lines: ~ task/Line
	quote-lines: ~ quote/Line
	forall lines [
		equal! lines/1/UnitPrice/Amount quote-lines/(index? lines)/UnitPrice/Amount
	]
]
"we should see a WIP quoting card in the Sales lane" [
	empty! board/backoffice
	length! board/sales 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/sales/1 [
		id: "RFQ#V-1009"
		desc: rejoin ["<br>" header/CustomerParty/Name "<br>quoting..."]
		ready: false
		]
	empty! board/purchasing
	empty! board/done
]
"he submits the Quote" [
	post sales quote: task
]
"we should see a ready quoting card in the Sales lane" [
	empty! board/backoffice
	length! board/sales 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/sales/1 [
		id: "RFQ#V-1009"
		desc: rejoin ["<br>" header/CustomerParty/Name "<br>quoted"]
		ready: true
		]
	empty! board/purchasing
	empty! board/done
]
"he should get back a ProcessQuote" [
	equal! task/name "ProcessQuote"
	has! task/ApplicationArea [ Sender: "backoffice"  Receiver: "customer" ]
]
"we should see a WIP quote sending card in the Backoffice lane" [
	length! board/backoffice 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/backoffice/1 [
		id: "RFQ#V-1009"
		desc: rejoin ["<br>" header/CustomerParty/Name "<br>sending quote..."]
		ready: false
		]
	empty! board/sales
	empty! board/purchasing
	empty! board/done
]
"we should see a ready quote sending card in the Backoffice lane" [
	probe board
	length! board/backoffice 1
	header: rfq/DataArea/RFQ/RFQHeader
	equal! board/backoffice/1 [
		id: "RFQ#V-1009"
		desc: rejoin ["<br>" header/CustomerParty/Name "<br>quote sent"]
		ready: true
		]
	empty! board/sales
	empty! board/purchasing
	empty! board/done
]